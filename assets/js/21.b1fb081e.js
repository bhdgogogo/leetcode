(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{312:function(t,a,s){"use strict";s.r(a);var v=s(4),_=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"题目描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),a("p",[a("code",[t._v("['1', '2', '3'].map(parseInt)")]),t._v("返回值是什么？")]),t._v(" "),a("blockquote",[a("p",[t._v("返回值为"),a("code",[t._v("[ 1, NaN, NaN ]")])])]),t._v(" "),a("h2",{attrs:{id:"分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析"}},[t._v("#")]),t._v(" 分析")]),t._v(" "),a("p",[a("code",[t._v("map")]),t._v(" 是传入的函数是有 3 个参数的: "),a("code",[t._v("value, index, arr")])]),t._v(" "),a("p",[a("code",[t._v("parseInt(string, radix)")])]),t._v(" "),a("p",[t._v("两个参数解释如下：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("string")]),t._v("，要被解析的值。如果参数不是一个字符串，则将其转换为字符串，底层是使用"),a("code",[t._v("toString")]),t._v(" 抽象操作的。字符串开头的空白符将会被忽略。")]),t._v(" "),a("li",[a("code",[t._v("radix")]),t._v(" 可选，从 2 到 36，表示字符串的基数。例如指定 16 表示被解析值是十六进制数。请注意，10不是默认值！")])]),t._v(" "),a("p",[t._v("所以我们执行"),a("code",[t._v("['1', '2', '3'].map(parseInt)")]),t._v("这行代码，其实是在执行下面这三行代码")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("我们先来看实际执行的第二行代码，"),a("code",[t._v("parseInt('2', 1)")]),t._v("，"),a("code",[t._v("radix")]),t._v(" 的值只能接收 "),a("code",[t._v("2-36")]),t._v("，而此时是"),a("code",[t._v("1")]),t._v("，所以返回"),a("code",[t._v("NaN")])]),t._v(" "),a("p",[t._v("第三行代码，"),a("code",[t._v("parseInt('3', 2)")]),t._v(", "),a("code",[t._v("radix")]),t._v(" 的值为"),a("code",[t._v("2")]),t._v("，表示前边的字符串数字我们将会以二进制来识别，而二进制只能是"),a("code",[t._v("0")]),t._v("和"),a("code",[t._v("1")]),t._v("，此时是"),a("code",[t._v("3")]),t._v("，所以返回"),a("code",[t._v("NaN")])]),t._v(" "),a("p",[t._v("最后来看第一行代码，"),a("code",[t._v("radix")]),t._v("的值为0，当"),a("code",[t._v("radix")]),t._v("为0时，我们就要看"),a("code",[t._v("string")]),t._v("的值了")]),t._v(" "),a("p",[t._v("如果 "),a("code",[t._v("radix")]),t._v(" 是 "),a("code",[t._v("undefined、0")]),t._v("或未指定的，"),a("code",[t._v("JavaScript")]),t._v("会假定以下情况：👇")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("ul",[a("li",[t._v("如果输入的 "),a("code",[t._v("string")]),t._v("以 "),a("code",[t._v('"0x"')]),t._v("或 "),a("code",[t._v('"0x"')]),t._v("（一个0，后面是小写或大写的X）开头，那么radix被假定为"),a("code",[t._v("16")]),t._v("，字符串的其余部分被当做十六进制数去解析。")]),t._v(" "),a("li",[t._v("如果输入的 "),a("code",[t._v("string")]),t._v('以 "0"（0）开头， '),a("code",[t._v("radix")]),t._v("被假定为8（八进制）或10（十进制）。具体选择哪一个radix取决于实现。"),a("code",[t._v("ECMAScript 5")]),t._v(" 澄清了应该使用 10 (十进制)，但不是所有的浏览器都支持。"),a("strong",[t._v("因此，在使用 "),a("code",[t._v("parseInt")]),t._v(" 时，一定要指定一个 radix")])]),t._v(" "),a("li",[t._v("如果输入的 "),a("code",[t._v("string")]),t._v(" 以任何其他值开头， "),a("code",[t._v("radix")]),t._v(" 是 10 (十进制)。")])])]),t._v(" "),a("p",[t._v("所以此时是十进制识别"),a("code",[t._v("string")]),t._v("，所以返回1")]),t._v(" "),a("p",[t._v("所以这行代码"),a("code",[t._v("['1', '2', '3'].map(parseInt)")]),t._v("的返回值就是"),a("code",[t._v("[1, NaN, NaN]")])])])}),[],!1,null,null,null);a.default=_.exports}}]);